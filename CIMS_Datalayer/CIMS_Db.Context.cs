//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CIMS_Datalayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CIMS_Entities : DbContext
    {
        public CIMS_Entities()
            : base("name=CIMS_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<client_details> client_details { get; set; }
        public virtual DbSet<client_status> client_status { get; set; }
        public virtual DbSet<currency> currencies { get; set; }
        public virtual DbSet<delivery_status> delivery_status { get; set; }
        public virtual DbSet<document_status> document_status { get; set; }
        public virtual DbSet<document_status33> document_status33 { get; set; }
        public virtual DbSet<ds_external_email> ds_external_email { get; set; }
        public virtual DbSet<duty_of_care_comments> duty_of_care_comments { get; set; }
        public virtual DbSet<email_notification_parameters_log> email_notification_parameters_log { get; set; }
        public virtual DbSet<instruction_comments> instruction_comments { get; set; }
        public virtual DbSet<instruction_picked> instruction_picked { get; set; }
        public virtual DbSet<instruction_submission> instruction_submission { get; set; }
        public virtual DbSet<instruction_type_allocations> instruction_type_allocations { get; set; }
        public virtual DbSet<instruction> instructions { get; set; }
        public virtual DbSet<instructions_attachment> instructions_attachment { get; set; }
        public virtual DbSet<instructions_types> instructions_types { get; set; }
        public virtual DbSet<menu> menus { get; set; }
        public virtual DbSet<operations_log> operations_log { get; set; }
        public virtual DbSet<portfolio> portfolios { get; set; }
        public virtual DbSet<reference_prefix> reference_prefix { get; set; }
        public virtual DbSet<relationship_managers> relationship_managers { get; set; }
        public virtual DbSet<report_rights> report_rights { get; set; }
        public virtual DbSet<search_by> search_by { get; set; }
        public virtual DbSet<sector> sectors { get; set; }
        public virtual DbSet<sub_menu> sub_menu { get; set; }
        public virtual DbSet<system_settings> system_settings { get; set; }
        public virtual DbSet<system_users> system_users { get; set; }
        public virtual DbSet<user_branch> user_branch { get; set; }
        public virtual DbSet<user_report_rights> user_report_rights { get; set; }
        public virtual DbSet<user_status> user_status { get; set; }
        public virtual DbSet<user_team_leader> user_team_leader { get; set; }
        public virtual DbSet<user_title> user_title { get; set; }
        public virtual DbSet<user_type_default> user_type_default { get; set; }
        public virtual DbSet<email_notification_parameters> email_notification_parameters { get; set; }
        public virtual DbSet<work_flow> work_flow { get; set; }
        public virtual DbSet<work_load_report_paramaters> work_load_report_paramaters { get; set; }
        public virtual DbSet<client_view> client_view { get; set; }
        public virtual DbSet<combined_detailed_transaction_log_view> combined_detailed_transaction_log_view { get; set; }
        public virtual DbSet<detailed_transaction_log_view> detailed_transaction_log_view { get; set; }
        public virtual DbSet<document_status_view> document_status_view { get; set; }
        public virtual DbSet<inprogress_by_stage_and_instruction_type> inprogress_by_stage_and_instruction_type { get; set; }
        public virtual DbSet<instruction_log_view> instruction_log_view { get; set; }
        public virtual DbSet<instruction_picked_view> instruction_picked_view { get; set; }
        public virtual DbSet<instruction_submission_view> instruction_submission_view { get; set; }
        public virtual DbSet<instructions_comments_view> instructions_comments_view { get; set; }
        public virtual DbSet<instructions_timing_view> instructions_timing_view { get; set; }
        public virtual DbSet<instructions_view> instructions_view { get; set; }
        public virtual DbSet<instructions_view2> instructions_view2 { get; set; }
        public virtual DbSet<instructios_allocation_view> instructios_allocation_view { get; set; }
        public virtual DbSet<system_users_view> system_users_view { get; set; }
        public virtual DbSet<transactions_view> transactions_view { get; set; }
        public virtual DbSet<User_Security_View> User_Security_View { get; set; }
        public virtual DbSet<user_team_leader_view> user_team_leader_view { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<user_type> user_type { get; set; }
    
        public virtual int import_client_data()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("import_client_data");
        }
    
        public virtual ObjectResult<proc_get_next_instruction_Result> proc_get_next_instruction(Nullable<int> status, Nullable<int> user_id)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_get_next_instruction_Result>("proc_get_next_instruction", statusParameter, user_idParameter);
        }
    
        public virtual ObjectResult<proc_get_next_instruction_id_Result> proc_get_next_instruction_id(Nullable<int> status, Nullable<long> user_id)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_get_next_instruction_id_Result>("proc_get_next_instruction_id", statusParameter, user_idParameter);
        }
    
        public virtual ObjectResult<proc_get_next_instructions_Result> proc_get_next_instructions(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_get_next_instructions_Result>("proc_get_next_instructions", statusParameter);
        }
    
        public virtual ObjectResult<proc_get_next_instructions_by_type_Result> proc_get_next_instructions_by_type(Nullable<int> status, Nullable<int> instruction_type_id)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var instruction_type_idParameter = instruction_type_id.HasValue ?
                new ObjectParameter("instruction_type_id", instruction_type_id) :
                new ObjectParameter("instruction_type_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_get_next_instructions_by_type_Result>("proc_get_next_instructions_by_type", statusParameter, instruction_type_idParameter);
        }
    
        public virtual ObjectResult<proc_get_next_instructions_packed_queue_Result> proc_get_next_instructions_packed_queue(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_get_next_instructions_packed_queue_Result>("proc_get_next_instructions_packed_queue", statusParameter);
        }
    
        public virtual ObjectResult<proc_get_next_instructions_queue_Result> proc_get_next_instructions_queue(Nullable<int> status, Nullable<int> minutes_to_cut_off_from, Nullable<int> minutes_to_cut_off_to)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var minutes_to_cut_off_fromParameter = minutes_to_cut_off_from.HasValue ?
                new ObjectParameter("minutes_to_cut_off_from", minutes_to_cut_off_from) :
                new ObjectParameter("minutes_to_cut_off_from", typeof(int));
    
            var minutes_to_cut_off_toParameter = minutes_to_cut_off_to.HasValue ?
                new ObjectParameter("minutes_to_cut_off_to", minutes_to_cut_off_to) :
                new ObjectParameter("minutes_to_cut_off_to", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_get_next_instructions_queue_Result>("proc_get_next_instructions_queue", statusParameter, minutes_to_cut_off_fromParameter, minutes_to_cut_off_toParameter);
        }
    
        public virtual ObjectResult<proc_get_next_instructions_referred_queue_Result> proc_get_next_instructions_referred_queue(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_get_next_instructions_referred_queue_Result>("proc_get_next_instructions_referred_queue", statusParameter);
        }
    
        public virtual int proc_insert_client_details(string client_Customer_Number, string client_Name, string client_Account_Number, Nullable<long> rM_ID, Nullable<int> client_PortFolio_ID, Nullable<int> client_Sector_ID, string status, string client_Branch_Code, Nullable<System.DateTime> inserted_date, Nullable<long> inserted_by, Nullable<System.DateTime> modified_date, Nullable<long> modified_by)
        {
            var client_Customer_NumberParameter = client_Customer_Number != null ?
                new ObjectParameter("Client_Customer_Number", client_Customer_Number) :
                new ObjectParameter("Client_Customer_Number", typeof(string));
    
            var client_NameParameter = client_Name != null ?
                new ObjectParameter("Client_Name", client_Name) :
                new ObjectParameter("Client_Name", typeof(string));
    
            var client_Account_NumberParameter = client_Account_Number != null ?
                new ObjectParameter("Client_Account_Number", client_Account_Number) :
                new ObjectParameter("Client_Account_Number", typeof(string));
    
            var rM_IDParameter = rM_ID.HasValue ?
                new ObjectParameter("RM_ID", rM_ID) :
                new ObjectParameter("RM_ID", typeof(long));
    
            var client_PortFolio_IDParameter = client_PortFolio_ID.HasValue ?
                new ObjectParameter("Client_PortFolio_ID", client_PortFolio_ID) :
                new ObjectParameter("Client_PortFolio_ID", typeof(int));
    
            var client_Sector_IDParameter = client_Sector_ID.HasValue ?
                new ObjectParameter("Client_Sector_ID", client_Sector_ID) :
                new ObjectParameter("Client_Sector_ID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var client_Branch_CodeParameter = client_Branch_Code != null ?
                new ObjectParameter("Client_Branch_Code", client_Branch_Code) :
                new ObjectParameter("Client_Branch_Code", typeof(string));
    
            var inserted_dateParameter = inserted_date.HasValue ?
                new ObjectParameter("inserted_date", inserted_date) :
                new ObjectParameter("inserted_date", typeof(System.DateTime));
    
            var inserted_byParameter = inserted_by.HasValue ?
                new ObjectParameter("inserted_by", inserted_by) :
                new ObjectParameter("inserted_by", typeof(long));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by.HasValue ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_client_details", client_Customer_NumberParameter, client_NameParameter, client_Account_NumberParameter, rM_IDParameter, client_PortFolio_IDParameter, client_Sector_IDParameter, statusParameter, client_Branch_CodeParameter, inserted_dateParameter, inserted_byParameter, modified_dateParameter, modified_byParameter);
        }
    
        public virtual int proc_insert_client_details_manually(string client_Customer_Number, string client_Name, string client_Account_Number, Nullable<long> rM_ID, Nullable<int> client_PortFolio_ID, Nullable<int> client_Sector_ID, string status, Nullable<long> inserted_by, Nullable<long> modified_by, string client_Branch_Code)
        {
            var client_Customer_NumberParameter = client_Customer_Number != null ?
                new ObjectParameter("Client_Customer_Number", client_Customer_Number) :
                new ObjectParameter("Client_Customer_Number", typeof(string));
    
            var client_NameParameter = client_Name != null ?
                new ObjectParameter("Client_Name", client_Name) :
                new ObjectParameter("Client_Name", typeof(string));
    
            var client_Account_NumberParameter = client_Account_Number != null ?
                new ObjectParameter("Client_Account_Number", client_Account_Number) :
                new ObjectParameter("Client_Account_Number", typeof(string));
    
            var rM_IDParameter = rM_ID.HasValue ?
                new ObjectParameter("RM_ID", rM_ID) :
                new ObjectParameter("RM_ID", typeof(long));
    
            var client_PortFolio_IDParameter = client_PortFolio_ID.HasValue ?
                new ObjectParameter("Client_PortFolio_ID", client_PortFolio_ID) :
                new ObjectParameter("Client_PortFolio_ID", typeof(int));
    
            var client_Sector_IDParameter = client_Sector_ID.HasValue ?
                new ObjectParameter("Client_Sector_ID", client_Sector_ID) :
                new ObjectParameter("Client_Sector_ID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var inserted_byParameter = inserted_by.HasValue ?
                new ObjectParameter("inserted_by", inserted_by) :
                new ObjectParameter("inserted_by", typeof(long));
    
            var modified_byParameter = modified_by.HasValue ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(long));
    
            var client_Branch_CodeParameter = client_Branch_Code != null ?
                new ObjectParameter("Client_Branch_Code", client_Branch_Code) :
                new ObjectParameter("Client_Branch_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_client_details_manually", client_Customer_NumberParameter, client_NameParameter, client_Account_NumberParameter, rM_IDParameter, client_PortFolio_IDParameter, client_Sector_IDParameter, statusParameter, inserted_byParameter, modified_byParameter, client_Branch_CodeParameter);
        }
    
        public virtual int proc_insert_document_status(string document_status, Nullable<int> document_status_stage, string document_status_action, Nullable<int> document_status_user_type_who_can_action, Nullable<int> exception, Nullable<int> foward_back_to_after_reversal, Nullable<int> is_document_held, Nullable<int> is_referral, Nullable<int> include_amount_in_checking, Nullable<int> must_comment)
        {
            var document_statusParameter = document_status != null ?
                new ObjectParameter("document_status", document_status) :
                new ObjectParameter("document_status", typeof(string));
    
            var document_status_stageParameter = document_status_stage.HasValue ?
                new ObjectParameter("document_status_stage", document_status_stage) :
                new ObjectParameter("document_status_stage", typeof(int));
    
            var document_status_actionParameter = document_status_action != null ?
                new ObjectParameter("document_status_action", document_status_action) :
                new ObjectParameter("document_status_action", typeof(string));
    
            var document_status_user_type_who_can_actionParameter = document_status_user_type_who_can_action.HasValue ?
                new ObjectParameter("document_status_user_type_who_can_action", document_status_user_type_who_can_action) :
                new ObjectParameter("document_status_user_type_who_can_action", typeof(int));
    
            var exceptionParameter = exception.HasValue ?
                new ObjectParameter("exception", exception) :
                new ObjectParameter("exception", typeof(int));
    
            var foward_back_to_after_reversalParameter = foward_back_to_after_reversal.HasValue ?
                new ObjectParameter("foward_back_to_after_reversal", foward_back_to_after_reversal) :
                new ObjectParameter("foward_back_to_after_reversal", typeof(int));
    
            var is_document_heldParameter = is_document_held.HasValue ?
                new ObjectParameter("is_document_held", is_document_held) :
                new ObjectParameter("is_document_held", typeof(int));
    
            var is_referralParameter = is_referral.HasValue ?
                new ObjectParameter("is_referral", is_referral) :
                new ObjectParameter("is_referral", typeof(int));
    
            var include_amount_in_checkingParameter = include_amount_in_checking.HasValue ?
                new ObjectParameter("include_amount_in_checking", include_amount_in_checking) :
                new ObjectParameter("include_amount_in_checking", typeof(int));
    
            var must_commentParameter = must_comment.HasValue ?
                new ObjectParameter("must_comment", must_comment) :
                new ObjectParameter("must_comment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_document_status", document_statusParameter, document_status_stageParameter, document_status_actionParameter, document_status_user_type_who_can_actionParameter, exceptionParameter, foward_back_to_after_reversalParameter, is_document_heldParameter, is_referralParameter, include_amount_in_checkingParameter, must_commentParameter);
        }
    
        public virtual int proc_insert_ds_external_email(Nullable<System.DateTime> email_date, string email_body, string email_from, string email_to, string email_cc, string email_bcc, Nullable<int> sent, Nullable<int> attempts, string email_subject, string email_attachment_path)
        {
            var email_dateParameter = email_date.HasValue ?
                new ObjectParameter("email_date", email_date) :
                new ObjectParameter("email_date", typeof(System.DateTime));
    
            var email_bodyParameter = email_body != null ?
                new ObjectParameter("email_body", email_body) :
                new ObjectParameter("email_body", typeof(string));
    
            var email_fromParameter = email_from != null ?
                new ObjectParameter("email_from", email_from) :
                new ObjectParameter("email_from", typeof(string));
    
            var email_toParameter = email_to != null ?
                new ObjectParameter("email_to", email_to) :
                new ObjectParameter("email_to", typeof(string));
    
            var email_ccParameter = email_cc != null ?
                new ObjectParameter("email_cc", email_cc) :
                new ObjectParameter("email_cc", typeof(string));
    
            var email_bccParameter = email_bcc != null ?
                new ObjectParameter("email_bcc", email_bcc) :
                new ObjectParameter("email_bcc", typeof(string));
    
            var sentParameter = sent.HasValue ?
                new ObjectParameter("sent", sent) :
                new ObjectParameter("sent", typeof(int));
    
            var attemptsParameter = attempts.HasValue ?
                new ObjectParameter("attempts", attempts) :
                new ObjectParameter("attempts", typeof(int));
    
            var email_subjectParameter = email_subject != null ?
                new ObjectParameter("email_subject", email_subject) :
                new ObjectParameter("email_subject", typeof(string));
    
            var email_attachment_pathParameter = email_attachment_path != null ?
                new ObjectParameter("email_attachment_path", email_attachment_path) :
                new ObjectParameter("email_attachment_path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_ds_external_email", email_dateParameter, email_bodyParameter, email_fromParameter, email_toParameter, email_ccParameter, email_bccParameter, sentParameter, attemptsParameter, email_subjectParameter, email_attachment_pathParameter);
        }
    
        public virtual int proc_insert_instructions(Nullable<double> amount, string comments, string reference, string file_name, Nullable<long> instruction_type_id, Nullable<System.DateTime> inserted_date, Nullable<int> inserted_by, Nullable<System.DateTime> modified_date, Nullable<int> modified_by, Nullable<int> status, Nullable<long> client_id, string file_type, Nullable<int> allocated_to, string account_no, Nullable<int> currency_id, string ft_reference, Nullable<long> rm_id, Nullable<long> branch_id, Nullable<System.DateTime> delivery_date, Nullable<int> processed_at_branch, Nullable<int> cross_currency, Nullable<double> cross_currency_rate)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var referenceParameter = reference != null ?
                new ObjectParameter("reference", reference) :
                new ObjectParameter("reference", typeof(string));
    
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var instruction_type_idParameter = instruction_type_id.HasValue ?
                new ObjectParameter("instruction_type_id", instruction_type_id) :
                new ObjectParameter("instruction_type_id", typeof(long));
    
            var inserted_dateParameter = inserted_date.HasValue ?
                new ObjectParameter("inserted_date", inserted_date) :
                new ObjectParameter("inserted_date", typeof(System.DateTime));
    
            var inserted_byParameter = inserted_by.HasValue ?
                new ObjectParameter("inserted_by", inserted_by) :
                new ObjectParameter("inserted_by", typeof(int));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by.HasValue ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var client_idParameter = client_id.HasValue ?
                new ObjectParameter("client_id", client_id) :
                new ObjectParameter("client_id", typeof(long));
    
            var file_typeParameter = file_type != null ?
                new ObjectParameter("file_type", file_type) :
                new ObjectParameter("file_type", typeof(string));
    
            var allocated_toParameter = allocated_to.HasValue ?
                new ObjectParameter("allocated_to", allocated_to) :
                new ObjectParameter("allocated_to", typeof(int));
    
            var account_noParameter = account_no != null ?
                new ObjectParameter("account_no", account_no) :
                new ObjectParameter("account_no", typeof(string));
    
            var currency_idParameter = currency_id.HasValue ?
                new ObjectParameter("currency_id", currency_id) :
                new ObjectParameter("currency_id", typeof(int));
    
            var ft_referenceParameter = ft_reference != null ?
                new ObjectParameter("ft_reference", ft_reference) :
                new ObjectParameter("ft_reference", typeof(string));
    
            var rm_idParameter = rm_id.HasValue ?
                new ObjectParameter("rm_id", rm_id) :
                new ObjectParameter("rm_id", typeof(long));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(long));
    
            var delivery_dateParameter = delivery_date.HasValue ?
                new ObjectParameter("delivery_date", delivery_date) :
                new ObjectParameter("delivery_date", typeof(System.DateTime));
    
            var processed_at_branchParameter = processed_at_branch.HasValue ?
                new ObjectParameter("processed_at_branch", processed_at_branch) :
                new ObjectParameter("processed_at_branch", typeof(int));
    
            var cross_currencyParameter = cross_currency.HasValue ?
                new ObjectParameter("cross_currency", cross_currency) :
                new ObjectParameter("cross_currency", typeof(int));
    
            var cross_currency_rateParameter = cross_currency_rate.HasValue ?
                new ObjectParameter("cross_currency_rate", cross_currency_rate) :
                new ObjectParameter("cross_currency_rate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_instructions", amountParameter, commentsParameter, referenceParameter, file_nameParameter, instruction_type_idParameter, inserted_dateParameter, inserted_byParameter, modified_dateParameter, modified_byParameter, statusParameter, client_idParameter, file_typeParameter, allocated_toParameter, account_noParameter, currency_idParameter, ft_referenceParameter, rm_idParameter, branch_idParameter, delivery_dateParameter, processed_at_branchParameter, cross_currencyParameter, cross_currency_rateParameter);
        }
    
        public virtual int proc_insert_operations_log(Nullable<int> internal_user_id_in, string message_in, string internal_user_category_in, string ip_address_in, Nullable<int> private_in, Nullable<int> opt_id_in, string log_category_in, Nullable<int> user_group)
        {
            var internal_user_id_inParameter = internal_user_id_in.HasValue ?
                new ObjectParameter("internal_user_id_in", internal_user_id_in) :
                new ObjectParameter("internal_user_id_in", typeof(int));
    
            var message_inParameter = message_in != null ?
                new ObjectParameter("message_in", message_in) :
                new ObjectParameter("message_in", typeof(string));
    
            var internal_user_category_inParameter = internal_user_category_in != null ?
                new ObjectParameter("internal_user_category_in", internal_user_category_in) :
                new ObjectParameter("internal_user_category_in", typeof(string));
    
            var ip_address_inParameter = ip_address_in != null ?
                new ObjectParameter("ip_address_in", ip_address_in) :
                new ObjectParameter("ip_address_in", typeof(string));
    
            var private_inParameter = private_in.HasValue ?
                new ObjectParameter("private_in", private_in) :
                new ObjectParameter("private_in", typeof(int));
    
            var opt_id_inParameter = opt_id_in.HasValue ?
                new ObjectParameter("opt_id_in", opt_id_in) :
                new ObjectParameter("opt_id_in", typeof(int));
    
            var log_category_inParameter = log_category_in != null ?
                new ObjectParameter("log_category_in", log_category_in) :
                new ObjectParameter("log_category_in", typeof(string));
    
            var user_groupParameter = user_group.HasValue ?
                new ObjectParameter("user_group", user_group) :
                new ObjectParameter("user_group", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_operations_log", internal_user_id_inParameter, message_inParameter, internal_user_category_inParameter, ip_address_inParameter, private_inParameter, opt_id_inParameter, log_category_inParameter, user_groupParameter);
        }
    
        public virtual int proc_insert_system_users(string system_user_login, Nullable<int> system_user_type, string system_user_password, string system_user_fname, string system_user_mname, string system_user_lname, string system_user_email, string system_user_id_number, Nullable<int> system_user_active, string system_user_mobile_number, string system_user_land_line, Nullable<int> change_password, string system_user_initials, Nullable<int> system_user_tittle, Nullable<int> system_user_branch, Nullable<int> system_tl_1, Nullable<int> user_can_allocate_what_document_status, string system_user_branch_code, Nullable<int> is_team_leader, Nullable<int> system_manager, Nullable<int> system_user_modified_by, Nullable<int> system_user_inserted_by, string check_sum, string login_option, Nullable<int> no_of_instructions_i_can_pack, Nullable<int> total_work_allocated)
        {
            var system_user_loginParameter = system_user_login != null ?
                new ObjectParameter("system_user_login", system_user_login) :
                new ObjectParameter("system_user_login", typeof(string));
    
            var system_user_typeParameter = system_user_type.HasValue ?
                new ObjectParameter("system_user_type", system_user_type) :
                new ObjectParameter("system_user_type", typeof(int));
    
            var system_user_passwordParameter = system_user_password != null ?
                new ObjectParameter("system_user_password", system_user_password) :
                new ObjectParameter("system_user_password", typeof(string));
    
            var system_user_fnameParameter = system_user_fname != null ?
                new ObjectParameter("system_user_fname", system_user_fname) :
                new ObjectParameter("system_user_fname", typeof(string));
    
            var system_user_mnameParameter = system_user_mname != null ?
                new ObjectParameter("system_user_mname", system_user_mname) :
                new ObjectParameter("system_user_mname", typeof(string));
    
            var system_user_lnameParameter = system_user_lname != null ?
                new ObjectParameter("system_user_lname", system_user_lname) :
                new ObjectParameter("system_user_lname", typeof(string));
    
            var system_user_emailParameter = system_user_email != null ?
                new ObjectParameter("system_user_email", system_user_email) :
                new ObjectParameter("system_user_email", typeof(string));
    
            var system_user_id_numberParameter = system_user_id_number != null ?
                new ObjectParameter("system_user_id_number", system_user_id_number) :
                new ObjectParameter("system_user_id_number", typeof(string));
    
            var system_user_activeParameter = system_user_active.HasValue ?
                new ObjectParameter("system_user_active", system_user_active) :
                new ObjectParameter("system_user_active", typeof(int));
    
            var system_user_mobile_numberParameter = system_user_mobile_number != null ?
                new ObjectParameter("system_user_mobile_number", system_user_mobile_number) :
                new ObjectParameter("system_user_mobile_number", typeof(string));
    
            var system_user_land_lineParameter = system_user_land_line != null ?
                new ObjectParameter("system_user_land_line", system_user_land_line) :
                new ObjectParameter("system_user_land_line", typeof(string));
    
            var change_passwordParameter = change_password.HasValue ?
                new ObjectParameter("change_password", change_password) :
                new ObjectParameter("change_password", typeof(int));
    
            var system_user_initialsParameter = system_user_initials != null ?
                new ObjectParameter("system_user_initials", system_user_initials) :
                new ObjectParameter("system_user_initials", typeof(string));
    
            var system_user_tittleParameter = system_user_tittle.HasValue ?
                new ObjectParameter("system_user_tittle", system_user_tittle) :
                new ObjectParameter("system_user_tittle", typeof(int));
    
            var system_user_branchParameter = system_user_branch.HasValue ?
                new ObjectParameter("system_user_branch", system_user_branch) :
                new ObjectParameter("system_user_branch", typeof(int));
    
            var system_tl_1Parameter = system_tl_1.HasValue ?
                new ObjectParameter("system_tl_1", system_tl_1) :
                new ObjectParameter("system_tl_1", typeof(int));
    
            var user_can_allocate_what_document_statusParameter = user_can_allocate_what_document_status.HasValue ?
                new ObjectParameter("user_can_allocate_what_document_status", user_can_allocate_what_document_status) :
                new ObjectParameter("user_can_allocate_what_document_status", typeof(int));
    
            var system_user_branch_codeParameter = system_user_branch_code != null ?
                new ObjectParameter("system_user_branch_code", system_user_branch_code) :
                new ObjectParameter("system_user_branch_code", typeof(string));
    
            var is_team_leaderParameter = is_team_leader.HasValue ?
                new ObjectParameter("is_team_leader", is_team_leader) :
                new ObjectParameter("is_team_leader", typeof(int));
    
            var system_managerParameter = system_manager.HasValue ?
                new ObjectParameter("system_manager", system_manager) :
                new ObjectParameter("system_manager", typeof(int));
    
            var system_user_modified_byParameter = system_user_modified_by.HasValue ?
                new ObjectParameter("system_user_modified_by", system_user_modified_by) :
                new ObjectParameter("system_user_modified_by", typeof(int));
    
            var system_user_inserted_byParameter = system_user_inserted_by.HasValue ?
                new ObjectParameter("system_user_inserted_by", system_user_inserted_by) :
                new ObjectParameter("system_user_inserted_by", typeof(int));
    
            var check_sumParameter = check_sum != null ?
                new ObjectParameter("check_sum", check_sum) :
                new ObjectParameter("check_sum", typeof(string));
    
            var login_optionParameter = login_option != null ?
                new ObjectParameter("login_option", login_option) :
                new ObjectParameter("login_option", typeof(string));
    
            var no_of_instructions_i_can_packParameter = no_of_instructions_i_can_pack.HasValue ?
                new ObjectParameter("no_of_instructions_i_can_pack", no_of_instructions_i_can_pack) :
                new ObjectParameter("no_of_instructions_i_can_pack", typeof(int));
    
            var total_work_allocatedParameter = total_work_allocated.HasValue ?
                new ObjectParameter("total_work_allocated", total_work_allocated) :
                new ObjectParameter("total_work_allocated", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_insert_system_users", system_user_loginParameter, system_user_typeParameter, system_user_passwordParameter, system_user_fnameParameter, system_user_mnameParameter, system_user_lnameParameter, system_user_emailParameter, system_user_id_numberParameter, system_user_activeParameter, system_user_mobile_numberParameter, system_user_land_lineParameter, change_passwordParameter, system_user_initialsParameter, system_user_tittleParameter, system_user_branchParameter, system_tl_1Parameter, user_can_allocate_what_document_statusParameter, system_user_branch_codeParameter, is_team_leaderParameter, system_managerParameter, system_user_modified_byParameter, system_user_inserted_byParameter, check_sumParameter, login_optionParameter, no_of_instructions_i_can_packParameter, total_work_allocatedParameter);
        }
    
        public virtual int proc_submit_and_allocate_instructions(Nullable<long> instruction_id, Nullable<int> status, Nullable<long> allocated_to, Nullable<System.DateTime> allocated_date, Nullable<int> instruction_status, Nullable<int> user_type, Nullable<int> user_id, Nullable<int> document_status_id, Nullable<long> is_referral)
        {
            var instruction_idParameter = instruction_id.HasValue ?
                new ObjectParameter("instruction_id", instruction_id) :
                new ObjectParameter("instruction_id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var allocated_toParameter = allocated_to.HasValue ?
                new ObjectParameter("allocated_to", allocated_to) :
                new ObjectParameter("allocated_to", typeof(long));
    
            var allocated_dateParameter = allocated_date.HasValue ?
                new ObjectParameter("allocated_date", allocated_date) :
                new ObjectParameter("allocated_date", typeof(System.DateTime));
    
            var instruction_statusParameter = instruction_status.HasValue ?
                new ObjectParameter("instruction_status", instruction_status) :
                new ObjectParameter("instruction_status", typeof(int));
    
            var user_typeParameter = user_type.HasValue ?
                new ObjectParameter("user_type", user_type) :
                new ObjectParameter("user_type", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var document_status_idParameter = document_status_id.HasValue ?
                new ObjectParameter("document_status_id", document_status_id) :
                new ObjectParameter("document_status_id", typeof(int));
    
            var is_referralParameter = is_referral.HasValue ?
                new ObjectParameter("is_referral", is_referral) :
                new ObjectParameter("is_referral", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_submit_and_allocate_instructions", instruction_idParameter, statusParameter, allocated_toParameter, allocated_dateParameter, instruction_statusParameter, user_typeParameter, user_idParameter, document_status_idParameter, is_referralParameter);
        }
    
        public virtual int proc_submit_and_allocate_instructions_enhanced(Nullable<long> instruction_id, Nullable<long> status, Nullable<long> allocated_to, Nullable<System.DateTime> allocated_date, Nullable<long> instruction_status, Nullable<long> user_type, Nullable<long> user_id, Nullable<long> document_status_id, Nullable<long> is_referral, string is_document_held)
        {
            var instruction_idParameter = instruction_id.HasValue ?
                new ObjectParameter("instruction_id", instruction_id) :
                new ObjectParameter("instruction_id", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(long));
    
            var allocated_toParameter = allocated_to.HasValue ?
                new ObjectParameter("allocated_to", allocated_to) :
                new ObjectParameter("allocated_to", typeof(long));
    
            var allocated_dateParameter = allocated_date.HasValue ?
                new ObjectParameter("allocated_date", allocated_date) :
                new ObjectParameter("allocated_date", typeof(System.DateTime));
    
            var instruction_statusParameter = instruction_status.HasValue ?
                new ObjectParameter("instruction_status", instruction_status) :
                new ObjectParameter("instruction_status", typeof(long));
    
            var user_typeParameter = user_type.HasValue ?
                new ObjectParameter("user_type", user_type) :
                new ObjectParameter("user_type", typeof(long));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(long));
    
            var document_status_idParameter = document_status_id.HasValue ?
                new ObjectParameter("document_status_id", document_status_id) :
                new ObjectParameter("document_status_id", typeof(long));
    
            var is_referralParameter = is_referral.HasValue ?
                new ObjectParameter("is_referral", is_referral) :
                new ObjectParameter("is_referral", typeof(long));
    
            var is_document_heldParameter = is_document_held != null ?
                new ObjectParameter("is_document_held", is_document_held) :
                new ObjectParameter("is_document_held", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_submit_and_allocate_instructions_enhanced", instruction_idParameter, statusParameter, allocated_toParameter, allocated_dateParameter, instruction_statusParameter, user_typeParameter, user_idParameter, document_status_idParameter, is_referralParameter, is_document_heldParameter);
        }
    
        public virtual int proc_update_client_details(string client_Customer_Number, string client_Name, string client_Account_Number, Nullable<System.DateTime> modified_date, Nullable<long> modified_by, Nullable<long> rM_ID, string status, string client_Branch_Code)
        {
            var client_Customer_NumberParameter = client_Customer_Number != null ?
                new ObjectParameter("Client_Customer_Number", client_Customer_Number) :
                new ObjectParameter("Client_Customer_Number", typeof(string));
    
            var client_NameParameter = client_Name != null ?
                new ObjectParameter("Client_Name", client_Name) :
                new ObjectParameter("Client_Name", typeof(string));
    
            var client_Account_NumberParameter = client_Account_Number != null ?
                new ObjectParameter("Client_Account_Number", client_Account_Number) :
                new ObjectParameter("Client_Account_Number", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by.HasValue ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(long));
    
            var rM_IDParameter = rM_ID.HasValue ?
                new ObjectParameter("RM_ID", rM_ID) :
                new ObjectParameter("RM_ID", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var client_Branch_CodeParameter = client_Branch_Code != null ?
                new ObjectParameter("Client_Branch_Code", client_Branch_Code) :
                new ObjectParameter("Client_Branch_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_update_client_details", client_Customer_NumberParameter, client_NameParameter, client_Account_NumberParameter, modified_dateParameter, modified_byParameter, rM_IDParameter, statusParameter, client_Branch_CodeParameter);
        }
    
        public virtual int proc_update_client_details_manually(string client_Customer_Number, string client_Name, string client_Account_Number, Nullable<long> rM_ID, Nullable<int> client_PortFolio_ID, Nullable<int> client_Sector_ID, Nullable<long> client_ID, string status, Nullable<System.DateTime> modified_date, Nullable<long> modified_by, string client_Branch_Code)
        {
            var client_Customer_NumberParameter = client_Customer_Number != null ?
                new ObjectParameter("Client_Customer_Number", client_Customer_Number) :
                new ObjectParameter("Client_Customer_Number", typeof(string));
    
            var client_NameParameter = client_Name != null ?
                new ObjectParameter("Client_Name", client_Name) :
                new ObjectParameter("Client_Name", typeof(string));
    
            var client_Account_NumberParameter = client_Account_Number != null ?
                new ObjectParameter("Client_Account_Number", client_Account_Number) :
                new ObjectParameter("Client_Account_Number", typeof(string));
    
            var rM_IDParameter = rM_ID.HasValue ?
                new ObjectParameter("RM_ID", rM_ID) :
                new ObjectParameter("RM_ID", typeof(long));
    
            var client_PortFolio_IDParameter = client_PortFolio_ID.HasValue ?
                new ObjectParameter("Client_PortFolio_ID", client_PortFolio_ID) :
                new ObjectParameter("Client_PortFolio_ID", typeof(int));
    
            var client_Sector_IDParameter = client_Sector_ID.HasValue ?
                new ObjectParameter("Client_Sector_ID", client_Sector_ID) :
                new ObjectParameter("Client_Sector_ID", typeof(int));
    
            var client_IDParameter = client_ID.HasValue ?
                new ObjectParameter("Client_ID", client_ID) :
                new ObjectParameter("Client_ID", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by.HasValue ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(long));
    
            var client_Branch_CodeParameter = client_Branch_Code != null ?
                new ObjectParameter("Client_Branch_Code", client_Branch_Code) :
                new ObjectParameter("Client_Branch_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_update_client_details_manually", client_Customer_NumberParameter, client_NameParameter, client_Account_NumberParameter, rM_IDParameter, client_PortFolio_IDParameter, client_Sector_IDParameter, client_IDParameter, statusParameter, modified_dateParameter, modified_byParameter, client_Branch_CodeParameter);
        }
    
        public virtual int proc_update_document_status(string document_status, Nullable<int> document_status_stage, string document_status_action, Nullable<int> document_status_user_type_who_can_action, Nullable<long> document_status_id, Nullable<int> exception, Nullable<int> foward_back_to_after_reversal, Nullable<int> is_document_held, Nullable<int> is_referral, Nullable<int> include_amount_in_checking, Nullable<int> must_comment)
        {
            var document_statusParameter = document_status != null ?
                new ObjectParameter("document_status", document_status) :
                new ObjectParameter("document_status", typeof(string));
    
            var document_status_stageParameter = document_status_stage.HasValue ?
                new ObjectParameter("document_status_stage", document_status_stage) :
                new ObjectParameter("document_status_stage", typeof(int));
    
            var document_status_actionParameter = document_status_action != null ?
                new ObjectParameter("document_status_action", document_status_action) :
                new ObjectParameter("document_status_action", typeof(string));
    
            var document_status_user_type_who_can_actionParameter = document_status_user_type_who_can_action.HasValue ?
                new ObjectParameter("document_status_user_type_who_can_action", document_status_user_type_who_can_action) :
                new ObjectParameter("document_status_user_type_who_can_action", typeof(int));
    
            var document_status_idParameter = document_status_id.HasValue ?
                new ObjectParameter("document_status_id", document_status_id) :
                new ObjectParameter("document_status_id", typeof(long));
    
            var exceptionParameter = exception.HasValue ?
                new ObjectParameter("exception", exception) :
                new ObjectParameter("exception", typeof(int));
    
            var foward_back_to_after_reversalParameter = foward_back_to_after_reversal.HasValue ?
                new ObjectParameter("foward_back_to_after_reversal", foward_back_to_after_reversal) :
                new ObjectParameter("foward_back_to_after_reversal", typeof(int));
    
            var is_document_heldParameter = is_document_held.HasValue ?
                new ObjectParameter("is_document_held", is_document_held) :
                new ObjectParameter("is_document_held", typeof(int));
    
            var is_referralParameter = is_referral.HasValue ?
                new ObjectParameter("is_referral", is_referral) :
                new ObjectParameter("is_referral", typeof(int));
    
            var include_amount_in_checkingParameter = include_amount_in_checking.HasValue ?
                new ObjectParameter("include_amount_in_checking", include_amount_in_checking) :
                new ObjectParameter("include_amount_in_checking", typeof(int));
    
            var must_commentParameter = must_comment.HasValue ?
                new ObjectParameter("must_comment", must_comment) :
                new ObjectParameter("must_comment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_update_document_status", document_statusParameter, document_status_stageParameter, document_status_actionParameter, document_status_user_type_who_can_actionParameter, document_status_idParameter, exceptionParameter, foward_back_to_after_reversalParameter, is_document_heldParameter, is_referralParameter, include_amount_in_checkingParameter, must_commentParameter);
        }
    
        public virtual int proc_update_instructions(Nullable<double> amount, string comments, string reference, string file_name, Nullable<long> instruction_id, Nullable<long> instruction_type_id, Nullable<System.DateTime> modified_date, Nullable<int> modified_by, Nullable<int> status, Nullable<long> client_id, string file_type, string ftroa_comments, string ftrob_comments, string processor_comments, string rm_comments, string account_no, Nullable<int> currency_id, string ft_reference, Nullable<long> rm_id, Nullable<long> branch_id, string related_reference, string call_back_comments, Nullable<long> doc_comments_id, string prmo2_comments, string call_back_no, Nullable<System.DateTime> delivery_date, Nullable<int> processed_at_branch, Nullable<int> cross_currency, Nullable<double> cross_currency_rate)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var referenceParameter = reference != null ?
                new ObjectParameter("reference", reference) :
                new ObjectParameter("reference", typeof(string));
    
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var instruction_idParameter = instruction_id.HasValue ?
                new ObjectParameter("instruction_id", instruction_id) :
                new ObjectParameter("instruction_id", typeof(long));
    
            var instruction_type_idParameter = instruction_type_id.HasValue ?
                new ObjectParameter("instruction_type_id", instruction_type_id) :
                new ObjectParameter("instruction_type_id", typeof(long));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by.HasValue ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var client_idParameter = client_id.HasValue ?
                new ObjectParameter("client_id", client_id) :
                new ObjectParameter("client_id", typeof(long));
    
            var file_typeParameter = file_type != null ?
                new ObjectParameter("file_type", file_type) :
                new ObjectParameter("file_type", typeof(string));
    
            var ftroa_commentsParameter = ftroa_comments != null ?
                new ObjectParameter("ftroa_comments", ftroa_comments) :
                new ObjectParameter("ftroa_comments", typeof(string));
    
            var ftrob_commentsParameter = ftrob_comments != null ?
                new ObjectParameter("ftrob_comments", ftrob_comments) :
                new ObjectParameter("ftrob_comments", typeof(string));
    
            var processor_commentsParameter = processor_comments != null ?
                new ObjectParameter("processor_comments", processor_comments) :
                new ObjectParameter("processor_comments", typeof(string));
    
            var rm_commentsParameter = rm_comments != null ?
                new ObjectParameter("rm_comments", rm_comments) :
                new ObjectParameter("rm_comments", typeof(string));
    
            var account_noParameter = account_no != null ?
                new ObjectParameter("account_no", account_no) :
                new ObjectParameter("account_no", typeof(string));
    
            var currency_idParameter = currency_id.HasValue ?
                new ObjectParameter("currency_id", currency_id) :
                new ObjectParameter("currency_id", typeof(int));
    
            var ft_referenceParameter = ft_reference != null ?
                new ObjectParameter("ft_reference", ft_reference) :
                new ObjectParameter("ft_reference", typeof(string));
    
            var rm_idParameter = rm_id.HasValue ?
                new ObjectParameter("rm_id", rm_id) :
                new ObjectParameter("rm_id", typeof(long));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(long));
    
            var related_referenceParameter = related_reference != null ?
                new ObjectParameter("related_reference", related_reference) :
                new ObjectParameter("related_reference", typeof(string));
    
            var call_back_commentsParameter = call_back_comments != null ?
                new ObjectParameter("call_back_comments", call_back_comments) :
                new ObjectParameter("call_back_comments", typeof(string));
    
            var doc_comments_idParameter = doc_comments_id.HasValue ?
                new ObjectParameter("doc_comments_id", doc_comments_id) :
                new ObjectParameter("doc_comments_id", typeof(long));
    
            var prmo2_commentsParameter = prmo2_comments != null ?
                new ObjectParameter("prmo2_comments", prmo2_comments) :
                new ObjectParameter("prmo2_comments", typeof(string));
    
            var call_back_noParameter = call_back_no != null ?
                new ObjectParameter("call_back_no", call_back_no) :
                new ObjectParameter("call_back_no", typeof(string));
    
            var delivery_dateParameter = delivery_date.HasValue ?
                new ObjectParameter("delivery_date", delivery_date) :
                new ObjectParameter("delivery_date", typeof(System.DateTime));
    
            var processed_at_branchParameter = processed_at_branch.HasValue ?
                new ObjectParameter("processed_at_branch", processed_at_branch) :
                new ObjectParameter("processed_at_branch", typeof(int));
    
            var cross_currencyParameter = cross_currency.HasValue ?
                new ObjectParameter("cross_currency", cross_currency) :
                new ObjectParameter("cross_currency", typeof(int));
    
            var cross_currency_rateParameter = cross_currency_rate.HasValue ?
                new ObjectParameter("cross_currency_rate", cross_currency_rate) :
                new ObjectParameter("cross_currency_rate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_update_instructions", amountParameter, commentsParameter, referenceParameter, file_nameParameter, instruction_idParameter, instruction_type_idParameter, modified_dateParameter, modified_byParameter, statusParameter, client_idParameter, file_typeParameter, ftroa_commentsParameter, ftrob_commentsParameter, processor_commentsParameter, rm_commentsParameter, account_noParameter, currency_idParameter, ft_referenceParameter, rm_idParameter, branch_idParameter, related_referenceParameter, call_back_commentsParameter, doc_comments_idParameter, prmo2_commentsParameter, call_back_noParameter, delivery_dateParameter, processed_at_branchParameter, cross_currencyParameter, cross_currency_rateParameter);
        }
    
        public virtual int proc_update_system_users(string system_user_login, Nullable<int> system_user_type, string system_user_password, string system_user_fname, Nullable<long> system_user_id, string system_user_mname, string system_user_lname, string system_user_email, string system_user_id_number, Nullable<int> system_user_active, string system_user_mobile_number, string system_user_land_line, Nullable<int> change_password, string system_user_initials, Nullable<int> system_user_tittle, Nullable<int> system_user_branch, Nullable<int> system_tl_1, Nullable<int> user_can_allocate_what_document_status, string system_user_branch_code, Nullable<int> is_team_leader, Nullable<int> system_manager, Nullable<int> system_user_modified_by, string check_sum, string login_option)
        {
            var system_user_loginParameter = system_user_login != null ?
                new ObjectParameter("system_user_login", system_user_login) :
                new ObjectParameter("system_user_login", typeof(string));
    
            var system_user_typeParameter = system_user_type.HasValue ?
                new ObjectParameter("system_user_type", system_user_type) :
                new ObjectParameter("system_user_type", typeof(int));
    
            var system_user_passwordParameter = system_user_password != null ?
                new ObjectParameter("system_user_password", system_user_password) :
                new ObjectParameter("system_user_password", typeof(string));
    
            var system_user_fnameParameter = system_user_fname != null ?
                new ObjectParameter("system_user_fname", system_user_fname) :
                new ObjectParameter("system_user_fname", typeof(string));
    
            var system_user_idParameter = system_user_id.HasValue ?
                new ObjectParameter("system_user_id", system_user_id) :
                new ObjectParameter("system_user_id", typeof(long));
    
            var system_user_mnameParameter = system_user_mname != null ?
                new ObjectParameter("system_user_mname", system_user_mname) :
                new ObjectParameter("system_user_mname", typeof(string));
    
            var system_user_lnameParameter = system_user_lname != null ?
                new ObjectParameter("system_user_lname", system_user_lname) :
                new ObjectParameter("system_user_lname", typeof(string));
    
            var system_user_emailParameter = system_user_email != null ?
                new ObjectParameter("system_user_email", system_user_email) :
                new ObjectParameter("system_user_email", typeof(string));
    
            var system_user_id_numberParameter = system_user_id_number != null ?
                new ObjectParameter("system_user_id_number", system_user_id_number) :
                new ObjectParameter("system_user_id_number", typeof(string));
    
            var system_user_activeParameter = system_user_active.HasValue ?
                new ObjectParameter("system_user_active", system_user_active) :
                new ObjectParameter("system_user_active", typeof(int));
    
            var system_user_mobile_numberParameter = system_user_mobile_number != null ?
                new ObjectParameter("system_user_mobile_number", system_user_mobile_number) :
                new ObjectParameter("system_user_mobile_number", typeof(string));
    
            var system_user_land_lineParameter = system_user_land_line != null ?
                new ObjectParameter("system_user_land_line", system_user_land_line) :
                new ObjectParameter("system_user_land_line", typeof(string));
    
            var change_passwordParameter = change_password.HasValue ?
                new ObjectParameter("change_password", change_password) :
                new ObjectParameter("change_password", typeof(int));
    
            var system_user_initialsParameter = system_user_initials != null ?
                new ObjectParameter("system_user_initials", system_user_initials) :
                new ObjectParameter("system_user_initials", typeof(string));
    
            var system_user_tittleParameter = system_user_tittle.HasValue ?
                new ObjectParameter("system_user_tittle", system_user_tittle) :
                new ObjectParameter("system_user_tittle", typeof(int));
    
            var system_user_branchParameter = system_user_branch.HasValue ?
                new ObjectParameter("system_user_branch", system_user_branch) :
                new ObjectParameter("system_user_branch", typeof(int));
    
            var system_tl_1Parameter = system_tl_1.HasValue ?
                new ObjectParameter("system_tl_1", system_tl_1) :
                new ObjectParameter("system_tl_1", typeof(int));
    
            var user_can_allocate_what_document_statusParameter = user_can_allocate_what_document_status.HasValue ?
                new ObjectParameter("user_can_allocate_what_document_status", user_can_allocate_what_document_status) :
                new ObjectParameter("user_can_allocate_what_document_status", typeof(int));
    
            var system_user_branch_codeParameter = system_user_branch_code != null ?
                new ObjectParameter("system_user_branch_code", system_user_branch_code) :
                new ObjectParameter("system_user_branch_code", typeof(string));
    
            var is_team_leaderParameter = is_team_leader.HasValue ?
                new ObjectParameter("is_team_leader", is_team_leader) :
                new ObjectParameter("is_team_leader", typeof(int));
    
            var system_managerParameter = system_manager.HasValue ?
                new ObjectParameter("system_manager", system_manager) :
                new ObjectParameter("system_manager", typeof(int));
    
            var system_user_modified_byParameter = system_user_modified_by.HasValue ?
                new ObjectParameter("system_user_modified_by", system_user_modified_by) :
                new ObjectParameter("system_user_modified_by", typeof(int));
    
            var check_sumParameter = check_sum != null ?
                new ObjectParameter("check_sum", check_sum) :
                new ObjectParameter("check_sum", typeof(string));
    
            var login_optionParameter = login_option != null ?
                new ObjectParameter("login_option", login_option) :
                new ObjectParameter("login_option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_update_system_users", system_user_loginParameter, system_user_typeParameter, system_user_passwordParameter, system_user_fnameParameter, system_user_idParameter, system_user_mnameParameter, system_user_lnameParameter, system_user_emailParameter, system_user_id_numberParameter, system_user_activeParameter, system_user_mobile_numberParameter, system_user_land_lineParameter, change_passwordParameter, system_user_initialsParameter, system_user_tittleParameter, system_user_branchParameter, system_tl_1Parameter, user_can_allocate_what_document_statusParameter, system_user_branch_codeParameter, is_team_leaderParameter, system_managerParameter, system_user_modified_byParameter, check_sumParameter, login_optionParameter);
        }
    
        public virtual int send_database_email(string subject1, string body1, string receipients1, string profile_name1)
        {
            var subject1Parameter = subject1 != null ?
                new ObjectParameter("subject1", subject1) :
                new ObjectParameter("subject1", typeof(string));
    
            var body1Parameter = body1 != null ?
                new ObjectParameter("body1", body1) :
                new ObjectParameter("body1", typeof(string));
    
            var receipients1Parameter = receipients1 != null ?
                new ObjectParameter("receipients1", receipients1) :
                new ObjectParameter("receipients1", typeof(string));
    
            var profile_name1Parameter = profile_name1 != null ?
                new ObjectParameter("profile_name1", profile_name1) :
                new ObjectParameter("profile_name1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("send_database_email", subject1Parameter, body1Parameter, receipients1Parameter, profile_name1Parameter);
        }
    
        public virtual int send_database_replication_email(string subject1, string body1, string receipients1)
        {
            var subject1Parameter = subject1 != null ?
                new ObjectParameter("subject1", subject1) :
                new ObjectParameter("subject1", typeof(string));
    
            var body1Parameter = body1 != null ?
                new ObjectParameter("body1", body1) :
                new ObjectParameter("body1", typeof(string));
    
            var receipients1Parameter = receipients1 != null ?
                new ObjectParameter("receipients1", receipients1) :
                new ObjectParameter("receipients1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("send_database_replication_email", subject1Parameter, body1Parameter, receipients1Parameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int proc_RunStringReturnStringValue(string tableName, string whereCaluse, string selector, string value)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereCaluseParameter = whereCaluse != null ?
                new ObjectParameter("whereCaluse", whereCaluse) :
                new ObjectParameter("whereCaluse", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunStringReturnStringValue", tableNameParameter, whereCaluseParameter, selectorParameter, valueParameter);
        }
    
        public virtual ObjectResult<eod_summary_by_status_view_Result> eod_summary_by_status_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<eod_summary_by_status_view_Result>("eod_summary_by_status_view");
        }
    
        public virtual ObjectResult<inprogress_by_status_view_Result> inprogress_by_status_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<inprogress_by_status_view_Result>("inprogress_by_status_view");
        }
    
        public virtual ObjectResult<Nullable<int>> no_of_processed_per_user_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("no_of_processed_per_user_view");
        }
    
        public virtual ObjectResult<proc_resources_view_Result> proc_resources_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_resources_view_Result>("proc_resources_view");
        }
    
        public virtual int proc_RunStringReturnStringValue3Wheres(string tableName, string whereClause1, string whereClause2, string whereClause3, string selector, string value1, string value2, string value3)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereClause3Parameter = whereClause3 != null ?
                new ObjectParameter("whereClause3", whereClause3) :
                new ObjectParameter("whereClause3", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var value1Parameter = value1 != null ?
                new ObjectParameter("value1", value1) :
                new ObjectParameter("value1", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("value2", value2) :
                new ObjectParameter("value2", typeof(string));
    
            var value3Parameter = value3 != null ?
                new ObjectParameter("value3", value3) :
                new ObjectParameter("value3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunStringReturnStringValue3Wheres", tableNameParameter, whereClause1Parameter, whereClause2Parameter, whereClause3Parameter, selectorParameter, value1Parameter, value2Parameter, value3Parameter);
        }
    
        public virtual ObjectResult<resources_view_Result> resources_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<resources_view_Result>("resources_view");
        }
    
        public virtual ObjectResult<return_view_Result> return_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<return_view_Result>("return_view");
        }
    
        public virtual ObjectResult<reworks_view_Result> reworks_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reworks_view_Result>("reworks_view");
        }
    
        public virtual ObjectResult<run_rate_view_Result> run_rate_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<run_rate_view_Result>("run_rate_view");
        }
    
        public virtual ObjectResult<transactions_summary_view_Result> transactions_summary_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<transactions_summary_view_Result>("transactions_summary_view");
        }
    
        public virtual ObjectResult<unprocessed_by_user_type_and_instruction_type_view_Result> unprocessed_by_user_type_and_instruction_type_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<unprocessed_by_user_type_and_instruction_type_view_Result>("unprocessed_by_user_type_and_instruction_type_view");
        }
    
        public virtual ObjectResult<unprocessed_by_user_type_view_Result> unprocessed_by_user_type_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<unprocessed_by_user_type_view_Result>("unprocessed_by_user_type_view");
        }
    
        public virtual ObjectResult<work_load_report_view_Result> work_load_report_view()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<work_load_report_view_Result>("work_load_report_view");
        }
    
        public virtual int proc_VariableSelectAll(string tableName, string whereClause, string value)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_VariableSelectAll", tableNameParameter, whereClauseParameter, valueParameter);
        }
    
        public virtual int proc_RunNonQuery(string queryType, string tableName, string whereClause, string update, string value)
        {
            var queryTypeParameter = queryType != null ?
                new ObjectParameter("queryType", queryType) :
                new ObjectParameter("queryType", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var updateParameter = update != null ?
                new ObjectParameter("update", update) :
                new ObjectParameter("update", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQuery", queryTypeParameter, tableNameParameter, whereClauseParameter, updateParameter, valueParameter);
        }
    
        public virtual int proc_RunNonQueryUpdate(string tableName, string whereClause, string update, string value)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var updateParameter = update != null ?
                new ObjectParameter("update", update) :
                new ObjectParameter("update", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQueryUpdate", tableNameParameter, whereClauseParameter, updateParameter, valueParameter);
        }
    
        public virtual int proc_GetDataSource(string tableName, string whereClause, string value)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_GetDataSource", tableNameParameter, whereClauseParameter, valueParameter);
        }
    
        public virtual int proc_VariableSelectLike(string tableName, string whereClause, string value, string whereClause2, string value2)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("value2", value2) :
                new ObjectParameter("value2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_VariableSelectLike", tableNameParameter, whereClauseParameter, valueParameter, whereClause2Parameter, value2Parameter);
        }
    
        public virtual int Procedure(string tableName, string whereCaluse, string value)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereCaluseParameter = whereCaluse != null ?
                new ObjectParameter("whereCaluse", whereCaluse) :
                new ObjectParameter("whereCaluse", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Procedure", tableNameParameter, whereCaluseParameter, valueParameter);
        }
    
        public virtual int proc_VariableSelectLikeAnd(string tableName, string whereClause, string value, string whereClause2, string value2)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var value2Parameter = value2 != null ?
                new ObjectParameter("value2", value2) :
                new ObjectParameter("value2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_VariableSelectLikeAnd", tableNameParameter, whereClauseParameter, valueParameter, whereClause2Parameter, value2Parameter);
        }
    
        public virtual int proc_VariableAndMultiple(string tableName, string whereClause, string value, string andClauseB, string andClauseC, string andClauseD, string andValueD, string andClauseE, string andValueE, string andClauseF, string andValueF)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var andClauseBParameter = andClauseB != null ?
                new ObjectParameter("andClauseB", andClauseB) :
                new ObjectParameter("andClauseB", typeof(string));
    
            var andClauseCParameter = andClauseC != null ?
                new ObjectParameter("andClauseC", andClauseC) :
                new ObjectParameter("andClauseC", typeof(string));
    
            var andClauseDParameter = andClauseD != null ?
                new ObjectParameter("andClauseD", andClauseD) :
                new ObjectParameter("andClauseD", typeof(string));
    
            var andValueDParameter = andValueD != null ?
                new ObjectParameter("andValueD", andValueD) :
                new ObjectParameter("andValueD", typeof(string));
    
            var andClauseEParameter = andClauseE != null ?
                new ObjectParameter("andClauseE", andClauseE) :
                new ObjectParameter("andClauseE", typeof(string));
    
            var andValueEParameter = andValueE != null ?
                new ObjectParameter("andValueE", andValueE) :
                new ObjectParameter("andValueE", typeof(string));
    
            var andClauseFParameter = andClauseF != null ?
                new ObjectParameter("andClauseF", andClauseF) :
                new ObjectParameter("andClauseF", typeof(string));
    
            var andValueFParameter = andValueF != null ?
                new ObjectParameter("andValueF", andValueF) :
                new ObjectParameter("andValueF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_VariableAndMultiple", tableNameParameter, whereClauseParameter, valueParameter, andClauseBParameter, andClauseCParameter, andClauseDParameter, andValueDParameter, andClauseEParameter, andValueEParameter, andClauseFParameter, andValueFParameter);
        }
    
        public virtual int proc_HowManyRecordsExist3Wheres(string tableName, string whereClause1, string whereValue1, string whereClause2, string whereValue2, string whereClause3, string whereValue3)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereValue1Parameter = whereValue1 != null ?
                new ObjectParameter("whereValue1", whereValue1) :
                new ObjectParameter("whereValue1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereValue2Parameter = whereValue2 != null ?
                new ObjectParameter("whereValue2", whereValue2) :
                new ObjectParameter("whereValue2", typeof(string));
    
            var whereClause3Parameter = whereClause3 != null ?
                new ObjectParameter("whereClause3", whereClause3) :
                new ObjectParameter("whereClause3", typeof(string));
    
            var whereValue3Parameter = whereValue3 != null ?
                new ObjectParameter("whereValue3", whereValue3) :
                new ObjectParameter("whereValue3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HowManyRecordsExist3Wheres", tableNameParameter, whereClause1Parameter, whereValue1Parameter, whereClause2Parameter, whereValue2Parameter, whereClause3Parameter, whereValue3Parameter);
        }
    
        public virtual int proc_RunNonQuery1Where(string tableName, string whereClause, string update, string value)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var updateParameter = update != null ?
                new ObjectParameter("update", update) :
                new ObjectParameter("update", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQuery1Where", tableNameParameter, whereClauseParameter, updateParameter, valueParameter);
        }
    
        public virtual int proc_RunNonQuery2Wheres(string tableName, string update, string whereClause1, string whereValue1, string whereClause2, string whereValue2)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var updateParameter = update != null ?
                new ObjectParameter("update", update) :
                new ObjectParameter("update", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereValue1Parameter = whereValue1 != null ?
                new ObjectParameter("whereValue1", whereValue1) :
                new ObjectParameter("whereValue1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereValue2Parameter = whereValue2 != null ?
                new ObjectParameter("whereValue2", whereValue2) :
                new ObjectParameter("whereValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQuery2Wheres", tableNameParameter, updateParameter, whereClause1Parameter, whereValue1Parameter, whereClause2Parameter, whereValue2Parameter);
        }
    
        public virtual int proc_RunNonQueryReturnDataReader1Where(string tableName, string selector, string whereClause, string whereValue)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereValueParameter = whereValue != null ?
                new ObjectParameter("whereValue", whereValue) :
                new ObjectParameter("whereValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQueryReturnDataReader1Where", tableNameParameter, selectorParameter, whereClauseParameter, whereValueParameter);
        }
    
        public virtual int proc_RunStringReturnStringValueIN(string mainTableName, string mainSelector, string mainWhereClause, string secondaryTableName, string secondarySelector, string secondaryWhereClause, string secondaryWhereValue)
        {
            var mainTableNameParameter = mainTableName != null ?
                new ObjectParameter("mainTableName", mainTableName) :
                new ObjectParameter("mainTableName", typeof(string));
    
            var mainSelectorParameter = mainSelector != null ?
                new ObjectParameter("mainSelector", mainSelector) :
                new ObjectParameter("mainSelector", typeof(string));
    
            var mainWhereClauseParameter = mainWhereClause != null ?
                new ObjectParameter("mainWhereClause", mainWhereClause) :
                new ObjectParameter("mainWhereClause", typeof(string));
    
            var secondaryTableNameParameter = secondaryTableName != null ?
                new ObjectParameter("secondaryTableName", secondaryTableName) :
                new ObjectParameter("secondaryTableName", typeof(string));
    
            var secondarySelectorParameter = secondarySelector != null ?
                new ObjectParameter("secondarySelector", secondarySelector) :
                new ObjectParameter("secondarySelector", typeof(string));
    
            var secondaryWhereClauseParameter = secondaryWhereClause != null ?
                new ObjectParameter("secondaryWhereClause", secondaryWhereClause) :
                new ObjectParameter("secondaryWhereClause", typeof(string));
    
            var secondaryWhereValueParameter = secondaryWhereValue != null ?
                new ObjectParameter("secondaryWhereValue", secondaryWhereValue) :
                new ObjectParameter("secondaryWhereValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunStringReturnStringValueIN", mainTableNameParameter, mainSelectorParameter, mainWhereClauseParameter, secondaryTableNameParameter, secondarySelectorParameter, secondaryWhereClauseParameter, secondaryWhereValueParameter);
        }
    
        public virtual int proc_RunNonQueryEqualsSelect(string tableName, string update, string equalsSelectColumn, string equalsSelectTableName, string equalsSelectSelector, string equalsSelectWhereClause, string equalsSelectWhereValue, string whereClause, string whereValue)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var updateParameter = update != null ?
                new ObjectParameter("update", update) :
                new ObjectParameter("update", typeof(string));
    
            var equalsSelectColumnParameter = equalsSelectColumn != null ?
                new ObjectParameter("equalsSelectColumn", equalsSelectColumn) :
                new ObjectParameter("equalsSelectColumn", typeof(string));
    
            var equalsSelectTableNameParameter = equalsSelectTableName != null ?
                new ObjectParameter("equalsSelectTableName", equalsSelectTableName) :
                new ObjectParameter("equalsSelectTableName", typeof(string));
    
            var equalsSelectSelectorParameter = equalsSelectSelector != null ?
                new ObjectParameter("equalsSelectSelector", equalsSelectSelector) :
                new ObjectParameter("equalsSelectSelector", typeof(string));
    
            var equalsSelectWhereClauseParameter = equalsSelectWhereClause != null ?
                new ObjectParameter("equalsSelectWhereClause", equalsSelectWhereClause) :
                new ObjectParameter("equalsSelectWhereClause", typeof(string));
    
            var equalsSelectWhereValueParameter = equalsSelectWhereValue != null ?
                new ObjectParameter("equalsSelectWhereValue", equalsSelectWhereValue) :
                new ObjectParameter("equalsSelectWhereValue", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereValueParameter = whereValue != null ?
                new ObjectParameter("whereValue", whereValue) :
                new ObjectParameter("whereValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQueryEqualsSelect", tableNameParameter, updateParameter, equalsSelectColumnParameter, equalsSelectTableNameParameter, equalsSelectSelectorParameter, equalsSelectWhereClauseParameter, equalsSelectWhereValueParameter, whereClauseParameter, whereValueParameter);
        }
    
        public virtual int proc_UnionMultipleSelect(string tableName1, string tableName2, string whereClause, string value, string selectA, string selectA1, string selectA2, string selectB, string selectB1, string selectB2)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var selectAParameter = selectA != null ?
                new ObjectParameter("selectA", selectA) :
                new ObjectParameter("selectA", typeof(string));
    
            var selectA1Parameter = selectA1 != null ?
                new ObjectParameter("selectA1", selectA1) :
                new ObjectParameter("selectA1", typeof(string));
    
            var selectA2Parameter = selectA2 != null ?
                new ObjectParameter("selectA2", selectA2) :
                new ObjectParameter("selectA2", typeof(string));
    
            var selectBParameter = selectB != null ?
                new ObjectParameter("selectB", selectB) :
                new ObjectParameter("selectB", typeof(string));
    
            var selectB1Parameter = selectB1 != null ?
                new ObjectParameter("selectB1", selectB1) :
                new ObjectParameter("selectB1", typeof(string));
    
            var selectB2Parameter = selectB2 != null ?
                new ObjectParameter("selectB2", selectB2) :
                new ObjectParameter("selectB2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UnionMultipleSelect", tableName1Parameter, tableName2Parameter, whereClauseParameter, valueParameter, selectAParameter, selectA1Parameter, selectA2Parameter, selectBParameter, selectB1Parameter, selectB2Parameter);
        }
    
        public virtual int proc_HowManyRecordsExist2Wheres(string tableName, string whereClause1, string whereValue1, string whereClause2, string whereValue2)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereValue1Parameter = whereValue1 != null ?
                new ObjectParameter("whereValue1", whereValue1) :
                new ObjectParameter("whereValue1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereValue2Parameter = whereValue2 != null ?
                new ObjectParameter("whereValue2", whereValue2) :
                new ObjectParameter("whereValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HowManyRecordsExist2Wheres", tableNameParameter, whereClause1Parameter, whereValue1Parameter, whereClause2Parameter, whereValue2Parameter);
        }
    
        public virtual int proc_RunNonQueryDelete(string tableName, string whereClause, string whereValue)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereValueParameter = whereValue != null ?
                new ObjectParameter("whereValue", whereValue) :
                new ObjectParameter("whereValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQueryDelete", tableNameParameter, whereClauseParameter, whereValueParameter);
        }
    
        public virtual int proc_RunNonQueryInsert(string tableName, string columns, string values)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var columnsParameter = columns != null ?
                new ObjectParameter("columns", columns) :
                new ObjectParameter("columns", typeof(string));
    
            var valuesParameter = values != null ?
                new ObjectParameter("values", values) :
                new ObjectParameter("values", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQueryInsert", tableNameParameter, columnsParameter, valuesParameter);
        }
    
        public virtual int proc_DataTableThreeAndsIn(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string andClause2, string andValue2, string andClause3, string andValue3)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DataTableThreeAndsIn", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter);
        }
    
        public virtual int proc_DataTableTwoAndsIn(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string andClause2, string andValue2)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DataTableTwoAndsIn", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int proc_HowManyRecordsExist1Where(string tableName, string whereClause1, string whereValue1)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereValue1Parameter = whereValue1 != null ?
                new ObjectParameter("whereValue1", whereValue1) :
                new ObjectParameter("whereValue1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_HowManyRecordsExist1Where", tableNameParameter, whereClause1Parameter, whereValue1Parameter);
        }
    
        public virtual int proc_MultipleAndsLikeWhere(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_MultipleAndsLikeWhere", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter);
        }
    
        public virtual int proc_MultipleAndsLikeWhereOr(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2, string andClause3, string andValue3)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_MultipleAndsLikeWhereOr", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter);
        }
    
        public virtual int proc_RunNonQueryReturnDataReaderMultiWheres(string tablename, string selector, string where)
        {
            var tablenameParameter = tablename != null ?
                new ObjectParameter("tablename", tablename) :
                new ObjectParameter("tablename", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_RunNonQueryReturnDataReaderMultiWheres", tablenameParameter, selectorParameter, whereParameter);
        }
    
        public virtual int proc_TwoAndsLikeWhereOr(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_TwoAndsLikeWhereOr", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int proc_greaterAndMultiple(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string greater, string andClause2, string andValue2, string andClause3, string andValue3, string andClause4, string andValue4)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var greaterParameter = greater != null ?
                new ObjectParameter("greater", greater) :
                new ObjectParameter("greater", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause4Parameter = andClause4 != null ?
                new ObjectParameter("AndClause4", andClause4) :
                new ObjectParameter("AndClause4", typeof(string));
    
            var andValue4Parameter = andValue4 != null ?
                new ObjectParameter("AndValue4", andValue4) :
                new ObjectParameter("AndValue4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_greaterAndMultiple", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, greaterParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, andClause4Parameter, andValue4Parameter);
        }
    
        public virtual int proc_greaterAndMultipleThree(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string greater, string andClause2, string andValue2, string andClause3, string andValue3, string andClause4, string andValue4)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var greaterParameter = greater != null ?
                new ObjectParameter("greater", greater) :
                new ObjectParameter("greater", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause4Parameter = andClause4 != null ?
                new ObjectParameter("AndClause4", andClause4) :
                new ObjectParameter("AndClause4", typeof(string));
    
            var andValue4Parameter = andValue4 != null ?
                new ObjectParameter("AndValue4", andValue4) :
                new ObjectParameter("AndValue4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_greaterAndMultipleThree", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, greaterParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, andClause4Parameter, andValue4Parameter);
        }
    
        public virtual int proc_greaterAndMultipleTwo(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string greater, string andClause2, string andValue2, string andClause3, string andValue3, string andClause4, string andValue4)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var greaterParameter = greater != null ?
                new ObjectParameter("greater", greater) :
                new ObjectParameter("greater", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause4Parameter = andClause4 != null ?
                new ObjectParameter("AndClause4", andClause4) :
                new ObjectParameter("AndClause4", typeof(string));
    
            var andValue4Parameter = andValue4 != null ?
                new ObjectParameter("AndValue4", andValue4) :
                new ObjectParameter("AndValue4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_greaterAndMultipleTwo", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, greaterParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, andClause4Parameter, andValue4Parameter);
        }
    
        public virtual int proc_instructionViewDate(string fromDate, string toDate, string andClause, string andValue, string tableName, string whereClause, string likevalue)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andValueParameter = andValue != null ?
                new ObjectParameter("AndValue", andValue) :
                new ObjectParameter("AndValue", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionViewDate", fromDateParameter, toDateParameter, andClauseParameter, andValueParameter, tableNameParameter, whereClauseParameter, likevalueParameter);
        }
    
        public virtual int proc_instructionViewDate1(string fromDate, string toDate, string andClause, string andValue, string tableName, string whereClause, string likevalue, string andClause1, string andValue1)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andValueParameter = andValue != null ?
                new ObjectParameter("AndValue", andValue) :
                new ObjectParameter("AndValue", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionViewDate1", fromDateParameter, toDateParameter, andClauseParameter, andValueParameter, tableNameParameter, whereClauseParameter, likevalueParameter, andClause1Parameter, andValue1Parameter);
        }
    
        public virtual int proc_instructionViewDate2(string fromDate, string toDate, string andClause, string andValue, string tableName, string whereClause, string likevalue, string andClause1, string andValue1, string andClause2, string andValue2)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andValueParameter = andValue != null ?
                new ObjectParameter("AndValue", andValue) :
                new ObjectParameter("AndValue", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionViewDate2", fromDateParameter, toDateParameter, andClauseParameter, andValueParameter, tableNameParameter, whereClauseParameter, likevalueParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int proc_defaultCase(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string andClause2, string andValue2, string procc)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var proccParameter = procc != null ?
                new ObjectParameter("procc", procc) :
                new ObjectParameter("procc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_defaultCase", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, proccParameter);
        }
    
        public virtual int proc_defaultCaseFill(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string andClause2, string andValue2)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_defaultCaseFill", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int proc_DoubleCondition(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2, string procc)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var proccParameter = procc != null ?
                new ObjectParameter("procc", procc) :
                new ObjectParameter("procc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DoubleCondition", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter, proccParameter);
        }
    
        public virtual int proc_DoubleConditionThree(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2, string andClause3, string andValue3, string andClause4, string andValue4, string procc)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause4Parameter = andClause4 != null ?
                new ObjectParameter("AndClause4", andClause4) :
                new ObjectParameter("AndClause4", typeof(string));
    
            var andValue4Parameter = andValue4 != null ?
                new ObjectParameter("AndValue4", andValue4) :
                new ObjectParameter("AndValue4", typeof(string));
    
            var proccParameter = procc != null ?
                new ObjectParameter("procc", procc) :
                new ObjectParameter("procc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DoubleConditionThree", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, andClause4Parameter, andValue4Parameter, proccParameter);
        }
    
        public virtual int proc_DoubleConditionTwo(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2, string andClause3, string andValue3, string procc)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var proccParameter = procc != null ?
                new ObjectParameter("procc", procc) :
                new ObjectParameter("procc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DoubleConditionTwo", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, proccParameter);
        }
    
        public virtual int proc_GetDropDownListInfo(string tableName, string select, string where)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var selectParameter = select != null ?
                new ObjectParameter("select", select) :
                new ObjectParameter("select", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_GetDropDownListInfo", tableNameParameter, selectParameter, whereParameter);
        }
    
        public virtual int proc_threeAndsLikeWhereOr(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2, string andClause3, string andValue3, string andClause4, string andValue4)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause4Parameter = andClause4 != null ?
                new ObjectParameter("AndClause4", andClause4) :
                new ObjectParameter("AndClause4", typeof(string));
    
            var andValue4Parameter = andValue4 != null ?
                new ObjectParameter("AndValue4", andValue4) :
                new ObjectParameter("AndValue4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_threeAndsLikeWhereOr", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, andClause4Parameter, andValue4Parameter);
        }
    
        public virtual int proc_DoubleCon(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2, string procc)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var proccParameter = procc != null ?
                new ObjectParameter("procc", procc) :
                new ObjectParameter("procc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DoubleCon", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter, proccParameter);
        }
    
        public virtual int proc_DoubleConOne(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2, string andClause3, string andValue3, string procc)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var proccParameter = procc != null ?
                new ObjectParameter("procc", procc) :
                new ObjectParameter("procc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DoubleConOne", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, proccParameter);
        }
    
        public virtual int proc_DoubleConTwo(string tableName1, string tableName2, string whereClause, string whereClause2, string value, string likeValue, string andClause, string andClause1, string andValue1, string orCLause, string andClause2, string andValue2, string andClause3, string andValue3, string andClause4, string andValue4, string procc)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var orCLauseParameter = orCLause != null ?
                new ObjectParameter("orCLause", orCLause) :
                new ObjectParameter("orCLause", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause4Parameter = andClause4 != null ?
                new ObjectParameter("AndClause4", andClause4) :
                new ObjectParameter("AndClause4", typeof(string));
    
            var andValue4Parameter = andValue4 != null ?
                new ObjectParameter("AndValue4", andValue4) :
                new ObjectParameter("AndValue4", typeof(string));
    
            var proccParameter = procc != null ?
                new ObjectParameter("procc", procc) :
                new ObjectParameter("procc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_DoubleConTwo", tableName1Parameter, tableName2Parameter, whereClauseParameter, whereClause2Parameter, valueParameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, orCLauseParameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, andClause4Parameter, andValue4Parameter, proccParameter);
        }
    
        public virtual int proc_instructionDate(string fromDate, string toDate, string dateCheck, string tableName, string whereClause, string likevalue)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var dateCheckParameter = dateCheck != null ?
                new ObjectParameter("dateCheck", dateCheck) :
                new ObjectParameter("dateCheck", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionDate", fromDateParameter, toDateParameter, dateCheckParameter, tableNameParameter, whereClauseParameter, likevalueParameter);
        }
    
        public virtual int proc_instructionDateAnd1(string fromDate, string toDate, string dateCheck, string tableName, string whereClause, string likevalue, string andClause1, string andValue1)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var dateCheckParameter = dateCheck != null ?
                new ObjectParameter("dateCheck", dateCheck) :
                new ObjectParameter("dateCheck", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionDateAnd1", fromDateParameter, toDateParameter, dateCheckParameter, tableNameParameter, whereClauseParameter, likevalueParameter, andClause1Parameter, andValue1Parameter);
        }
    
        public virtual int proc_instructionDateAnd2(string fromDate, string toDate, string dateCheck, string tableName, string whereClause, string likevalue, string andClause1, string andValue1, string andClause2, string andValue2)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var dateCheckParameter = dateCheck != null ?
                new ObjectParameter("dateCheck", dateCheck) :
                new ObjectParameter("dateCheck", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionDateAnd2", fromDateParameter, toDateParameter, dateCheckParameter, tableNameParameter, whereClauseParameter, likevalueParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int proc_instructionDtAnd(string tableName, string whereClause, string likeValue, string andClause1, string andValue1, string andClause2, string andValue2)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionDtAnd", tableNameParameter, whereClauseParameter, likeValueParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int proc_instructionDtAnd1(string tableName, string whereClause, string likeValue, string andClause1, string andValue1, string andClause2, string andValue2, string andClause3, string andValue3)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionDtAnd1", tableNameParameter, whereClauseParameter, likeValueParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter);
        }
    
        public virtual int proc_instructionDtAnd2(string tableName, string whereClause, string likeValue, string andClause1, string andValue1, string andClause2, string andValue2, string andClause3, string andValue3, string andClause4, string andValue4)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause4Parameter = andClause4 != null ?
                new ObjectParameter("AndClause4", andClause4) :
                new ObjectParameter("AndClause4", typeof(string));
    
            var andValue4Parameter = andValue4 != null ?
                new ObjectParameter("AndValue4", andValue4) :
                new ObjectParameter("AndValue4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionDtAnd2", tableNameParameter, whereClauseParameter, likeValueParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, andClause4Parameter, andValue4Parameter);
        }
    
        public virtual int proc_instructionJoinAnd1(string tableName1, string tableName2, string whereClause1, string whereClause2, string whereValue2, string likeValue, string tableName3, string inValue, string selector, string andClause1, string andValue1, string tb1Join, string tb2Join)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereValue2Parameter = whereValue2 != null ?
                new ObjectParameter("whereValue2", whereValue2) :
                new ObjectParameter("whereValue2", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var tableName3Parameter = tableName3 != null ?
                new ObjectParameter("tableName3", tableName3) :
                new ObjectParameter("tableName3", typeof(string));
    
            var inValueParameter = inValue != null ?
                new ObjectParameter("inValue", inValue) :
                new ObjectParameter("inValue", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var tb1JoinParameter = tb1Join != null ?
                new ObjectParameter("tb1Join", tb1Join) :
                new ObjectParameter("tb1Join", typeof(string));
    
            var tb2JoinParameter = tb2Join != null ?
                new ObjectParameter("tb2Join", tb2Join) :
                new ObjectParameter("tb2Join", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionJoinAnd1", tableName1Parameter, tableName2Parameter, whereClause1Parameter, whereClause2Parameter, whereValue2Parameter, likeValueParameter, tableName3Parameter, inValueParameter, selectorParameter, andClause1Parameter, andValue1Parameter, tb1JoinParameter, tb2JoinParameter);
        }
    
        public virtual int proc_instructionJoinAnd2(string tableName1, string tableName2, string tableName3, string inValue, string selector, string whereClause1, string whereClause2, string whereValue2, string likeValue, string andClause, string andClause1, string andValue1, string andClause2, string andValue2, string tb1Join, string tb2Join)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var tableName3Parameter = tableName3 != null ?
                new ObjectParameter("tableName3", tableName3) :
                new ObjectParameter("tableName3", typeof(string));
    
            var inValueParameter = inValue != null ?
                new ObjectParameter("inValue", inValue) :
                new ObjectParameter("inValue", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereValue2Parameter = whereValue2 != null ?
                new ObjectParameter("whereValue2", whereValue2) :
                new ObjectParameter("whereValue2", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var tb1JoinParameter = tb1Join != null ?
                new ObjectParameter("tb1Join", tb1Join) :
                new ObjectParameter("tb1Join", typeof(string));
    
            var tb2JoinParameter = tb2Join != null ?
                new ObjectParameter("tb2Join", tb2Join) :
                new ObjectParameter("tb2Join", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionJoinAnd2", tableName1Parameter, tableName2Parameter, tableName3Parameter, inValueParameter, selectorParameter, whereClause1Parameter, whereClause2Parameter, whereValue2Parameter, likeValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, tb1JoinParameter, tb2JoinParameter);
        }
    
        public virtual int proc_instructionJoinAndNot(string tableName1, string tableName2, string tableName3, string whereClause1, string whereClause2, string whereValue2, string likeValue, string inValue, string andClause, string andClause1, string andValue1, string andClause2, string andValue2, string selector, string tb1Join, string tb2Join)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var tableName3Parameter = tableName3 != null ?
                new ObjectParameter("tableName3", tableName3) :
                new ObjectParameter("tableName3", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereValue2Parameter = whereValue2 != null ?
                new ObjectParameter("whereValue2", whereValue2) :
                new ObjectParameter("whereValue2", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var inValueParameter = inValue != null ?
                new ObjectParameter("inValue", inValue) :
                new ObjectParameter("inValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var tb1JoinParameter = tb1Join != null ?
                new ObjectParameter("tb1Join", tb1Join) :
                new ObjectParameter("tb1Join", typeof(string));
    
            var tb2JoinParameter = tb2Join != null ?
                new ObjectParameter("tb2Join", tb2Join) :
                new ObjectParameter("tb2Join", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionJoinAndNot", tableName1Parameter, tableName2Parameter, tableName3Parameter, whereClause1Parameter, whereClause2Parameter, whereValue2Parameter, likeValueParameter, inValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, selectorParameter, tb1JoinParameter, tb2JoinParameter);
        }
    
        public virtual int proc_instructionJoinAndOr(string tableName1, string tableName2, string tableName3, string whereClause1, string whereClause2, string whereValue2, string likeValue, string inValue, string andClause, string andClause1, string andValue1, string andClause2, string andValue2, string andClause3, string andValue3, string selector, string tb1Join, string tb2Join)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var tableName3Parameter = tableName3 != null ?
                new ObjectParameter("tableName3", tableName3) :
                new ObjectParameter("tableName3", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereValue2Parameter = whereValue2 != null ?
                new ObjectParameter("whereValue2", whereValue2) :
                new ObjectParameter("whereValue2", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var inValueParameter = inValue != null ?
                new ObjectParameter("inValue", inValue) :
                new ObjectParameter("inValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var tb1JoinParameter = tb1Join != null ?
                new ObjectParameter("tb1Join", tb1Join) :
                new ObjectParameter("tb1Join", typeof(string));
    
            var tb2JoinParameter = tb2Join != null ?
                new ObjectParameter("tb2Join", tb2Join) :
                new ObjectParameter("tb2Join", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionJoinAndOr", tableName1Parameter, tableName2Parameter, tableName3Parameter, whereClause1Parameter, whereClause2Parameter, whereValue2Parameter, likeValueParameter, inValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, selectorParameter, tb1JoinParameter, tb2JoinParameter);
        }
    
        public virtual int proc_instructionJoinAndOr2(string tableName1, string tableName2, string tableName3, string whereClause1, string whereClause2, string whereValue2, string likeValue, string inValue, string andClause, string andClause1, string andValue1, string andClause2, string andValue2, string andClause3, string andValue3, string andClause4, string andValue4, string selector, string tb1Join, string tb2Join)
        {
            var tableName1Parameter = tableName1 != null ?
                new ObjectParameter("tableName1", tableName1) :
                new ObjectParameter("tableName1", typeof(string));
    
            var tableName2Parameter = tableName2 != null ?
                new ObjectParameter("tableName2", tableName2) :
                new ObjectParameter("tableName2", typeof(string));
    
            var tableName3Parameter = tableName3 != null ?
                new ObjectParameter("tableName3", tableName3) :
                new ObjectParameter("tableName3", typeof(string));
    
            var whereClause1Parameter = whereClause1 != null ?
                new ObjectParameter("whereClause1", whereClause1) :
                new ObjectParameter("whereClause1", typeof(string));
    
            var whereClause2Parameter = whereClause2 != null ?
                new ObjectParameter("whereClause2", whereClause2) :
                new ObjectParameter("whereClause2", typeof(string));
    
            var whereValue2Parameter = whereValue2 != null ?
                new ObjectParameter("whereValue2", whereValue2) :
                new ObjectParameter("whereValue2", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var inValueParameter = inValue != null ?
                new ObjectParameter("inValue", inValue) :
                new ObjectParameter("inValue", typeof(string));
    
            var andClauseParameter = andClause != null ?
                new ObjectParameter("AndClause", andClause) :
                new ObjectParameter("AndClause", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause4Parameter = andClause4 != null ?
                new ObjectParameter("AndClause4", andClause4) :
                new ObjectParameter("AndClause4", typeof(string));
    
            var andValue4Parameter = andValue4 != null ?
                new ObjectParameter("AndValue4", andValue4) :
                new ObjectParameter("AndValue4", typeof(string));
    
            var selectorParameter = selector != null ?
                new ObjectParameter("selector", selector) :
                new ObjectParameter("selector", typeof(string));
    
            var tb1JoinParameter = tb1Join != null ?
                new ObjectParameter("tb1Join", tb1Join) :
                new ObjectParameter("tb1Join", typeof(string));
    
            var tb2JoinParameter = tb2Join != null ?
                new ObjectParameter("tb2Join", tb2Join) :
                new ObjectParameter("tb2Join", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionJoinAndOr2", tableName1Parameter, tableName2Parameter, tableName3Parameter, whereClause1Parameter, whereClause2Parameter, whereValue2Parameter, likeValueParameter, inValueParameter, andClauseParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter, andClause4Parameter, andValue4Parameter, selectorParameter, tb1JoinParameter, tb2JoinParameter);
        }
    
        public virtual int proc_instructionDateAnd3(string fromDate, string toDate, string dateCheck, string tableName, string whereClause, string likevalue, string andClause1, string andValue1, string andClause3, string andValue3, string andClause2, string andValue2)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var dateCheckParameter = dateCheck != null ?
                new ObjectParameter("dateCheck", dateCheck) :
                new ObjectParameter("dateCheck", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionDateAnd3", fromDateParameter, toDateParameter, dateCheckParameter, tableNameParameter, whereClauseParameter, likevalueParameter, andClause1Parameter, andValue1Parameter, andClause3Parameter, andValue3Parameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int proc_instructionViewDateAnd(string fromDate, string toDate, string dateCheck, string tableName, string whereClause, string likevalue, string andClause1, string andValue1)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var dateCheckParameter = dateCheck != null ?
                new ObjectParameter("dateCheck", dateCheck) :
                new ObjectParameter("dateCheck", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionViewDateAnd", fromDateParameter, toDateParameter, dateCheckParameter, tableNameParameter, whereClauseParameter, likevalueParameter, andClause1Parameter, andValue1Parameter);
        }
    
        public virtual int proc_instructionViewDateAnd1(string fromDate, string toDate, string dateCheck, string tableName, string whereClause, string likevalue, string andClause1, string andValue1, string andClause2, string andValue2)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var dateCheckParameter = dateCheck != null ?
                new ObjectParameter("dateCheck", dateCheck) :
                new ObjectParameter("dateCheck", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionViewDateAnd1", fromDateParameter, toDateParameter, dateCheckParameter, tableNameParameter, whereClauseParameter, likevalueParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int proc_instructionViewDateAnd2(string fromDate, string toDate, string dateCheck, string tableName, string whereClause, string likevalue, string andClause1, string andValue1, string andClause2, string andValue2, string andClause3, string andValue3)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var dateCheckParameter = dateCheck != null ?
                new ObjectParameter("dateCheck", dateCheck) :
                new ObjectParameter("dateCheck", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likevalueParameter = likevalue != null ?
                new ObjectParameter("likevalue", likevalue) :
                new ObjectParameter("likevalue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            var andClause3Parameter = andClause3 != null ?
                new ObjectParameter("AndClause3", andClause3) :
                new ObjectParameter("AndClause3", typeof(string));
    
            var andValue3Parameter = andValue3 != null ?
                new ObjectParameter("AndValue3", andValue3) :
                new ObjectParameter("AndValue3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_instructionViewDateAnd2", fromDateParameter, toDateParameter, dateCheckParameter, tableNameParameter, whereClauseParameter, likevalueParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter, andClause3Parameter, andValue3Parameter);
        }
    
        public virtual int proc_TableWithFn(string fromDate, string toDate, string whereClause, string likeValue, string andClause1, string andValue1)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_TableWithFn", fromDateParameter, toDateParameter, whereClauseParameter, likeValueParameter, andClause1Parameter, andValue1Parameter);
        }
    
        public virtual int proc_TableWithFn2(string fromDate, string toDate, string whereClause, string likeValue, string andClause1, string andValue1, string andClause2, string andValue2)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var likeValueParameter = likeValue != null ?
                new ObjectParameter("likeValue", likeValue) :
                new ObjectParameter("likeValue", typeof(string));
    
            var andClause1Parameter = andClause1 != null ?
                new ObjectParameter("AndClause1", andClause1) :
                new ObjectParameter("AndClause1", typeof(string));
    
            var andValue1Parameter = andValue1 != null ?
                new ObjectParameter("AndValue1", andValue1) :
                new ObjectParameter("AndValue1", typeof(string));
    
            var andClause2Parameter = andClause2 != null ?
                new ObjectParameter("AndClause2", andClause2) :
                new ObjectParameter("AndClause2", typeof(string));
    
            var andValue2Parameter = andValue2 != null ?
                new ObjectParameter("AndValue2", andValue2) :
                new ObjectParameter("AndValue2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_TableWithFn2", fromDateParameter, toDateParameter, whereClauseParameter, likeValueParameter, andClause1Parameter, andValue1Parameter, andClause2Parameter, andValue2Parameter);
        }
    
        public virtual int last_savedatetime(Nullable<System.DateTime> last_successful_login)
        {
            var last_successful_loginParameter = last_successful_login.HasValue ?
                new ObjectParameter("last_successful_login", last_successful_login) :
                new ObjectParameter("last_successful_login", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("last_savedatetime", last_successful_loginParameter);
        }
    
        public virtual int last_successful_login(Nullable<System.DateTime> last_successful_login)
        {
            var last_successful_loginParameter = last_successful_login.HasValue ?
                new ObjectParameter("last_successful_login", last_successful_login) :
                new ObjectParameter("last_successful_login", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("last_successful_login", last_successful_loginParameter);
        }
    
        public virtual int proc_LastLogin(string whereClause, string whereValue, string lastlogin)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var whereValueParameter = whereValue != null ?
                new ObjectParameter("whereValue", whereValue) :
                new ObjectParameter("whereValue", typeof(string));
    
            var lastloginParameter = lastlogin != null ?
                new ObjectParameter("lastlogin", lastlogin) :
                new ObjectParameter("lastlogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_LastLogin", whereClauseParameter, whereValueParameter, lastloginParameter);
        }
    }
}
